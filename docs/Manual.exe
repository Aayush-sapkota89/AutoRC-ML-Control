Remote Control Car Project Manual: Connecting Code to Hardware and Controlling the Car 
 


Hardware Requirements
• Remote control car chassis with DC motors
• Arduino-compatible microcontroller (e.g., Arduino Uno)
• Motor driver (e.g., L298N)
• Breadboard and jumper wires
• Power source (e.g., batteries)
• Serial communication module (e.g., USB-to-TTL serial cable)


Software Requirements
• Arduino IDE (for uploading firmware to the microcontroller)
• Python (for running the software component)
• PySerial library (for serial communication between the software and the microcontroller)


Connecting the Hardware
1.Motor Driver Connection
  Connect the motor driver to the microcontroller:
     + VCC to 5V
     + GND to GND
     + IN1 and IN2 to digital pins (e.g., D2 and D3)
     + OUT1 and OUT2 to the DC motors
2. Microcontroller Connection
 * Connect the microcontroller to the breadboard:
     + VCC to 5V
     + GND to GND
 * Connect the serial communication module to the microcontroller:
     + TX to RX (on the microcontroller)
     + RX to TX (on the microcontroller)
     + GND to GND
3. Power Source Connection
 * Connect the power source to the motor driver and the microcontroller:
     + VCC to the motor driver's VCC
     + GND to the motor driver's GND and the microcontroller's GND


Uploading the Firmware
1.Open the Arduino IDE
 Install the Arduino IDE on your computer if you haven't already.
2.Open the Firmware Code
  Open the `firmware/src/main.cpp file in the Arduino IDE.
3.Select the Microcontroller Board
 Select the correct microcontroller board from the Tools > Board menu.
4.Upload the Firmware
  Upload the firmware to the microcontroller by clicking the Upload button or pressing Ctrl+U.


Configuring the Software
1. **Install the Required Libraries**
 * Install the PySerial library by running `pip install pyserial` in your terminal/command prompt.
2. **Configure the Serial Communication**
 * Open the `software/src/car_interface.py` file and update the `serial.Serial` constructor with the correct COM port (e.g., 'COM3').


Controlling the Car
1.Run the Software**
  Run the software component by executing `python software/src/main.py` in your terminal/command prompt.
2.Send Commands to the Car
  Use the keyboard to send commands to the car:
     + F: Move forward
     + B: Move backward
     + L: Turn left
     + R: Turn right
     + S: Stop


Troubleshooting
• Check the Serial Communication
  + Ensure that the serial communication module is properly connected to the microcontroller and the computer.
  + Verify that the COM port is correctly configured in the software.
• Check the Motor Driver
  + Ensure that the motor driver is properly connected to the microcontroller and the DC motors.
  + Verify that the motor driver is receiving the correct signals from the microcontroller.
• Check the Power Source
  + Ensure that the power source is providing the correct voltage and current to the motor driver and the microcontroller.


By following these steps, you should be able to connect the code to the hardware and control the remote control car using the software component.